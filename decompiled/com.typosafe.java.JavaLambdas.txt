Compiled from "JavaLambdas.java"
public class com.typosafe.java.JavaLambdas {
  public com.typosafe.java.JavaLambdas();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.List<java.lang.String> filterAndMap(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #3,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      11: invokeinterface #4,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: invokedynamic #5,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      21: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #7                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #9                  // class java/util/List
      37: areturn

  public java.lang.String passLambda();
    Code:
       0: invokedynamic #10,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       5: invokestatic  #11                 // Method com/typosafe/Instances.printUserList:(Ljava/util/function/Function;)Ljava/lang/String;
       8: areturn

  public java.lang.String passClosure(java.lang.String);
    Code:
       0: aload_1
       1: invokedynamic #12,  0             // InvokeDynamic #3:apply:(Ljava/lang/String;)Ljava/util/function/Function;
       6: invokestatic  #11                 // Method com/typosafe/Instances.printUserList:(Ljava/util/function/Function;)Ljava/lang/String;
       9: areturn

  private static java.lang.String lambda$passClosure$3(java.lang.String, java.lang.String);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: aload_1
      12: invokevirtual #16                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      15: iconst_2
      16: iconst_5
      17: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  private static java.lang.String lambda$passLambda$2(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: iconst_2
       5: iconst_5
       6: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       9: areturn

  private static java.lang.String lambda$filterAndMap$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #19                 // String  +
       3: ldc           #20                 // String _
       5: invokevirtual #21                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: invokevirtual #16                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      11: areturn

  private static boolean lambda$filterAndMap$0(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #22                 // String Ala
       3: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ireturn
}
